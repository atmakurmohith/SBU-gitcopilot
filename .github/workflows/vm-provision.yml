name: VM Provision

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Terraform operation to run'
        required: true
        default: 'plan'
        type: choice
        options: [plan, apply, destroy]
      create_vm:
        description: 'Whether to create a VM'
        required: true
        default: 'false'
        type: choice
        options: ['true','false']
      vm_os:
        description: 'OS for the VM'
        required: true
        default: 'ubuntu'
        type: choice
        options: [ubuntu, redhat, windows]
      vm_size:
        description: 'VM size'
        required: true
        default: 'Standard_B1s'
        type: string

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare terraform.tfvars
        run: |
          create_vm_val=${{ github.event.inputs.create_vm }}
          vm_os_val=${{ github.event.inputs.vm_os }}
          vm_size_val="${{ github.event.inputs.vm_size }}"

          # write HCL tfvars
          cat > terraform.tfvars <<EOF
create_vm = ${create_vm_val}
vm_type = "${vm_os_val}"
vm_size = "${vm_size_val}"
vm_admin_username = "azureuser"
EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.operation == 'plan' || github.event.inputs.operation == 'apply' }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: ${{ github.event.inputs.operation == 'apply' }}
        run: |
          if [ "${{ github.event.inputs.operation }}" = "apply" ]; then
            terraform apply -auto-approve tfplan
          fi

      - name: Terraform Destroy
        if: ${{ github.event.inputs.operation == 'destroy' }}
        run: |
          terraform destroy -auto-approve -var "vm_type=${{ github.event.inputs.vm_os }}" -var "create_vm=${{ github.event.inputs.create_vm }}"
